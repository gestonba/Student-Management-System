version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: school_mgmt_postgres
    environment:
      POSTGRES_DB: school_mgmt
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./seed_db/tables.sql:/docker-entrypoint-initdb.d/01-tables.sql
      - ./seed_db/seed-db.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d school_mgmt"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: school_mgmt_backend
    environment:
      - NODE_ENV=development
      - PORT=5007
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/school_mgmt
      - JWT_ACCESS_TOKEN_SECRET=12345
      - JWT_REFRESH_TOKEN_SECRET=12345678
      - CSRF_TOKEN_SECRET=my_csrf_secret
      - JWT_ACCESS_TOKEN_TIME_IN_MS=900000
      - JWT_REFRESH_TOKEN_TIME_IN_MS=28800000
      - CSRF_TOKEN_TIME_IN_MS=950000
      - MAIL_FROM_USER=your-desired-name@domain-name.com
      - EMAIL_VERIFICATION_TOKEN_SECRET=863yncir8bc2r
      - EMAIL_VERIFICATION_TOKEN_TIME_IN_MS=18000000
      - PASSWORD_SETUP_TOKEN_TIME_IN_MS=300000
      - PASSWORD_SETUP_TOKEN_SECRET=gwdigwidw
      - UI_URL=http://localhost:5173
      - API_URL=http://localhost:5007
      - COOKIE_DOMAIN=localhost
      - RESEND_API_KEY=re_123456789
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5007:5007"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: npm start

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: school_mgmt_frontend
    environment:
      - VITE_API_URL=http://localhost:5007
      - BROWSER=none
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0 --open false

volumes:
  postgres_data:
